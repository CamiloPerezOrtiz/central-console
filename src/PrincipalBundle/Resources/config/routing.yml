principal_homepage:
    path:     /
    defaults: { _controller: PrincipalBundle:Default:index }

# Login #

login:
    path:     /login
    defaults: { _controller: PrincipalBundle:Usuarios:login }

login_check:
    path:     /login_check

validacionLogin:
    path:     /validacionLogin
    defaults: { _controller: PrincipalBundle:Usuarios:validacionLogin }

# Dashboard # 

dashboard:
    path:     /dashboard
    defaults: {_controller: PrincipalBundle:Usuarios:dashboard }

# Logout #

logout:
    path:     /logout

# Usuarios #

listaUsuarios:
    path:     /listaUsuarios 
    defaults: { _controller: PrincipalBundle:Usuarios:listaUsuarios }

registroUsuario:
    path:     /registroUsuario
    defaults: { _controller: PrincipalBundle:Usuarios:registroUsuario }

actualizarEstado:
    path:     /actualizarEstado/{id}  
    defaults: { _controller: PrincipalBundle:Usuarios:actualizarEstado }

editarUsuario:
    path:     /editarUsuario/{id}
    defaults: { _controller: PrincipalBundle:Usuarios:editarUsuario }

eliminarUsuario:
    path:     /eliminarUsuario/{id}
    defaults: { _controller: PrincipalBundle:Usuarios:eliminarUsuario }

registroUsuarioGrupo:
    path:     /registroUsuarioGrupo/{id}
    defaults: { _controller: PrincipalBundle:Usuarios:registroUsuarioGrupo }

llenar:
    path:     /llenar
    defaults: { _controller: PrincipalBundle:Usuarios:llenar }

# Grupos #

leerArchivoTxt:
    path:     /leerArchivoTxt 
    defaults: { _controller: PrincipalBundle:Grupos:leerArchivoTxt }

grupos:
    path:     /grupos 
    defaults: { _controller: PrincipalBundle:Grupos:grupos }

aplicarCambiosSuperUsuario:
    path:     /aplicarCambiosSuperUsuario/{id} 
    defaults: { _controller: PrincipalBundle:Grupos:aplicarCambiosSuperUsuario }

aplicarCambios:
    path:     /aplicarCambios
    defaults: { _controller: PrincipalBundle:Grupos:aplicarCambios }

# Aliases #

gruposAliases:
    path:     /gruposAliases 
    defaults: { _controller: PrincipalBundle:Aliases:gruposAliases }

registroAliases:
    path:     /registroAliases 
    defaults: { _controller: PrincipalBundle:Aliases:registroAliases }

editarAliases:
    path:     /editarAliases/{id} 
    defaults: { _controller: PrincipalBundle:Aliases:editarAliases }

listaAliases:
    path:     /listaAliases 
    defaults: { _controller: PrincipalBundle:Aliases:listaAliases }

eliminarAliases:
    path:     /eliminarAliases/{id} 
    defaults: { _controller: PrincipalBundle:Aliases:eliminarAliases }

crearXMLAliases:
    path:     /crearXMLAliases/{id}
    defaults: { _controller: PrincipalBundle:Aliases:crearXMLAliases }

aplicarXMLAliases:
    path:     /aplicarXMLAliases/{id}
    defaults: { _controller: PrincipalBundle:Aliases:aplicarXMLAliases }

# Acl groups #

gruposAcl:
    path:     /gruposAcl 
    defaults: { _controller: PrincipalBundle:Acl:gruposAcl }

registroAcl:
    path:     /registroAcl 
    defaults: { _controller: PrincipalBundle:Acl:registroAcl }

editarAcl:
    path:     /editarAcl/{id} 
    defaults: { _controller: PrincipalBundle:Acl:editarAcl }

listaAcl:
    path:     /listaAcl 
    defaults: { _controller: PrincipalBundle:Acl:listaAcl }

eliminarAcl:
    path:     /eliminarAcl/{id} 
    defaults: { _controller: PrincipalBundle:Acl:eliminarAcl }

crearXMLAcl:
    path:     /crearXMLAcl/{id}
    defaults: { _controller: PrincipalBundle:Acl:crearXMLAcl }

aplicarXMLAcl:
    path:     /aplicarXMLAcl/{id}
    defaults: { _controller: PrincipalBundle:Acl:aplicarXMLAcl }

# Target #

gruposTarget:
    path:     /gruposTarget 
    defaults: { _controller: PrincipalBundle:Target:gruposTarget }

registroTarget:
    path:     /registroTarget 
    defaults: { _controller: PrincipalBundle:Target:registroTarget }

editarTarget:
    path:     /editarTarget/{id} 
    defaults: { _controller: PrincipalBundle:Target:editarTarget }

listaTarget:
    path:     /listaTarget 
    defaults: { _controller: PrincipalBundle:Target:listaTarget }

eliminarTarget:
    path:     /eliminarTarget/{id} 
    defaults: { _controller: PrincipalBundle:Target:eliminarTarget }

crearXMLTarget:
    path:     /crearXMLTarget
    defaults: { _controller: PrincipalBundle:Target:crearXMLTarget }

aplicarXMLTarget:
    path:     /aplicarXMLTarget/{id}
    defaults: { _controller: PrincipalBundle:Target:aplicarXMLTarget }

# NatPortForward #

gruposNat:
    path:     /gruposNat
    defaults: { _controller: PrincipalBundle:NatPortForward:gruposNat }

registroNatPortForward:
    path:     /registroNatPortForward 
    defaults: { _controller: PrincipalBundle:NatPortForward:registroNatPortForward }

editarNatPortForward:
    path:     /editarNatPortForward/{id} 
    defaults: { _controller: PrincipalBundle:NatPortForward:editarNatPortForward }

listaNat:
    path:     /listaNat 
    defaults: { _controller: PrincipalBundle:NatPortForward:listaNat }

eliminarNatPortForward:
    path:     /eliminarNatPortForward/{id} 
    defaults: { _controller: PrincipalBundle:NatPortForward:eliminarNatPortForward }

crearXMLNat:
    path:     /crearXMLNat/{id}
    defaults: { _controller: PrincipalBundle:NatPortForward:crearXMLNat }

aplicarXMLNat:
    path:     /aplicarXMLNat/{id}
    defaults: { _controller: PrincipalBundle:NatPortForward:aplicarXMLNat }

dragAndDropNatPortForward:
    path:     /dragAndDropNatPortForward
    defaults: { _controller: PrincipalBundle:NatPortForward:dragAndDropNatPortForward }

registroNatOneToOne:
    path:     /registroNatOneToOne 
    defaults: { _controller: PrincipalBundle:NatPortForward:registroNatOneToOne }

editarNatOneToOne:
    path:     /editarNatOneToOne/{id} 
    defaults: { _controller: PrincipalBundle:NatPortForward:editarNatOneToOne }

eliminarNatOneToOne:
    path:     /eliminarNatOneToOne/{id} 
    defaults: { _controller: PrincipalBundle:NatPortForward:eliminarNatOneToOne }

dragAndDropNatOneToOne:
    path:     /dragAndDropNatOneToOne
    defaults: { _controller: PrincipalBundle:NatPortForward:dragAndDropNatOneToOne }

#Listado de grupos controlador: GrupoController funcion: listaGrupoAction #  
listGroupFirewall:
    path:     /listGroupFirewall
    defaults: { _controller: PrincipalBundle:Firewall:listGroupFirewall }

#Listado de las target categories controlador: TargetcategoriesController funcion: listaTargetcategoriesAction #  
listFirewallSuperUser:
    path:     /listFirewallSuperUser/{id}
    defaults: { _controller: PrincipalBundle:Firewall:listFirewallSuperUser }

#Listado de las target categories controlador: TargetcategoriesController funcion: listaTargetcategoriesAction #  
listFirewall:
    path:     /listFirewall
    defaults: { _controller: PrincipalBundle:Firewall:listFirewall }

#Registro de un nuevo target categories controlador:NatController funcion registroNatr#
registerFirewallSuperUser:
    path:     /registerFirewallSuperUser/{id} 
    defaults: { _controller: PrincipalBundle:Firewall:registerFirewallSuperUser }

#Registro de un nuevo target categories controlador:NatController funcion registroNatr#
registerFirewallWan:
    path:     /registerFirewallWan
    defaults: { _controller: PrincipalBundle:Firewall:registerFirewallWan }

#Listado de grupos controlador: GrupoController funcion: listaGrupoAction #  
refreshFirewallWan:
    path:     /refreshFirewallWan
    defaults: { _controller: PrincipalBundle:Firewall:refreshFirewallWan }

#Elimina el target categories seleccionado controlador: AliasesController funcion eliminarAliases#
deleteFirewallWan:
    path:     /deleteFirewallWan/{id}
    defaults: { _controller: PrincipalBundle:Firewall:deleteFirewallWan }

#Edita el usuario el cual fue seleccionado controlador: FirewallWanController funcion editarFirewallWan#
editFirewallWan:
    path:     /editFirewallWan/{id}
    defaults: { _controller: PrincipalBundle:Firewall:editFirewallWan }

#Registro de un nuevo target categories controlador:NatController funcion registroNatr#
registerFirewallLanSuperUser:
    path:     /registerFirewallLanSuperUser/{id} 
    defaults: { _controller: PrincipalBundle:Firewall:registerFirewallLanSuperUser }

#Registro de un nuevo target categories controlador:NatController funcion registroNatr#
registerFirewallLan:
    path:     /registerFirewallLan
    defaults: { _controller: PrincipalBundle:Firewall:registerFirewallLan }

#Listado de grupos controlador: GrupoController funcion: listaGrupoAction #  
refreshFirewallLan:
    path:     /refreshFirewallLan
    defaults: { _controller: PrincipalBundle:Firewall:refreshFirewallLan }

#Elimina el target categories seleccionado controlador: AliasesController funcion eliminarAliases#
deleteFirewallLan:
    path:     /deleteFirewallLan/{id}
    defaults: { _controller: PrincipalBundle:Firewall:deleteFirewallLan }

#Edita el usuario el cual fue seleccionado controlador: FirewallWanController funcion editarFirewallWan#
editFirewallLan:
    path:     /editFirewallLan/{id}
    defaults: { _controller: PrincipalBundle:Firewall:editFirewallLan }

#Crear XML acl groups controlador:NatController funcion crearXMLNat #
createXMLFirewall:
    path:     /createXMLFirewall/{id}
    defaults: { _controller: PrincipalBundle:Firewall:createXMLFirewall }

#Crear XML acl groups controlador:NatController funcion crearXMLNat #
aplicateXMLFirewall:
    path:     /aplicateXMLFirewall/{id}
    defaults: { _controller: PrincipalBundle:Firewall:aplicateXMLFirewall }